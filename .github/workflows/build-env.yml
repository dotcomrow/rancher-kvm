name: Build RKE2 Cloud

on:
  push:
    branches:
      - prod

jobs:
  build:
    runs-on: self-hosted  # Run directly on the host, NOT in a container

    env:
        TF_API_TOKEN: ${{ secrets.TFE_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Verify Libvirt Connection
        run: |
          echo "Checking libvirt socket..."
          ls -l /var/run/libvirt/libvirt-sock
          echo "Testing virsh connection..."
          virsh -c qemu:///system list --all

      - name: Setup Terraform Backend
        run: |
          cat > backend.tf << EOF
          terraform { 
              backend "remote" { 
                  organization = "${{ github.repository_owner }}"
                  workspaces { 
                      name = "k8s-cluster" 
                  } 
              } 
          }
          EOF

      - name: Configure Terraform Credentials
        run: |
          mkdir -p ~/.terraform.d
          cat <<EOF > ~/.terraform.d/credentials.tfrc.json
          {
            "credentials": {
              "app.terraform.io": {
                "token": "${TF_API_TOKEN}"
              }
            }
          }
          EOF

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init 

      - name: Debug Libvirt Provider
        run: |
          mkdir -p test
          cat > test/main.tf << EOF
          terraform { 
            required_providers { 
              libvirt = { 
                source = "dmacvicar/libvirt"
              } 
            } 
          } 
          provider "libvirt" { 
            uri = "qemu:///system" 
          } 
          resource "libvirt_pool" "test" {
            name = "test"
            type = "dir"
            path = "/tmp/test"
          }
          output "pool_id" { value = libvirt_pool.default.id }
          EOF

          cd test
          terraform init
          terraform apply -auto-approve -target=libvirt_pool.default
          terraform destroy -auto-approve -target=libvirt_pool.default
          cd ..
          rm -rf test

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve
