apiVersion: management.cattle.io/v3
kind: GlobalRoleBinding
metadata:
  name: github-k8s-cluster-admins
  labels:
    auth-provider: github
globalRoleName: admin
groupPrincipalName: 'github_team:{{GITHUB_AUTH_VAL}}'
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-team-cluster-admins
subjects:
  - kind: Group
    name: 'github_team:{{GITHUB_AUTH_VAL}}'  # Replace with your team
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: management.cattle.io/v3
kind: ClusterRoleTemplateBinding
metadata:
  name: github-team-cluster-owner
  namespace: local            # Adjust if your cluster name is different
clusterName: local            # Adjust if your cluster name is different
groupName: 'github_team:{{GITHUB_AUTH_VAL}}'
roleTemplateName: cluster-owner
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
accessMode: required
apiVersion: management.cattle.io/v3
kind: AuthConfig
metadata:
  name: github
  namespace: cattle-system
enabled: true
displayName: GitHub Authentication
clientId: '{{GITHUB_CLIENT_ID}}'
clientSecret: '{{GITHUB_CLIENT_SECRET}}'
hostname: 'github.com'
tls: true
type: githubConfig
logoutAllSupported: false
rancherUrl: 'https://$RANCHER_HOSTNAME.$RANCHER_DOMAIN'
allowedPrincipalIds:
  - 'github_team:{{GITHUB_AUTH_VAL}}'
scopes:
  - 'read:user'
  - 'user:email'
  - 'read:org'
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: management.cattle.io/v3
kind: Setting
metadata:
  name: auth-provider
value: github
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io